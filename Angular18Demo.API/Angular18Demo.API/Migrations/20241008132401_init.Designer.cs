// <auto-generated />
using Angular18Demo.API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Angular18Demo.API.Migrations
{
    [DbContext(typeof(databaseContext))]
    [Migration("20241008132401_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Angular18Demo.API.Data.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DepartmentName = "Human Resources"
                        },
                        new
                        {
                            DepartmentId = 2,
                            DepartmentName = "IT"
                        },
                        new
                        {
                            DepartmentId = 3,
                            DepartmentName = "Finance"
                        },
                        new
                        {
                            DepartmentId = 4,
                            DepartmentName = "Marketing"
                        },
                        new
                        {
                            DepartmentId = 5,
                            DepartmentName = "Sales"
                        });
                });

            modelBuilder.Entity("Angular18Demo.API.Data.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            DepartmentId = 1,
                            Email = "john.doe@example.com",
                            EmployeeName = "John Doe",
                            Phone = "1234567890"
                        },
                        new
                        {
                            EmployeeId = 2,
                            DepartmentId = 2,
                            Email = "jane.smith@example.com",
                            EmployeeName = "Jane Smith",
                            Phone = "0987654321"
                        },
                        new
                        {
                            EmployeeId = 3,
                            DepartmentId = 3,
                            Email = "michael.johnson@example.com",
                            EmployeeName = "Michael Johnson",
                            Phone = "1112223333"
                        },
                        new
                        {
                            EmployeeId = 4,
                            DepartmentId = 4,
                            Email = "emily.davis@example.com",
                            EmployeeName = "Emily Davis",
                            Phone = "2223334444"
                        },
                        new
                        {
                            EmployeeId = 5,
                            DepartmentId = 5,
                            Email = "daniel.brown@example.com",
                            EmployeeName = "Daniel Brown",
                            Phone = "3334445555"
                        },
                        new
                        {
                            EmployeeId = 6,
                            DepartmentId = 1,
                            Email = "sarah.wilson@example.com",
                            EmployeeName = "Sarah Wilson",
                            Phone = "4445556666"
                        },
                        new
                        {
                            EmployeeId = 7,
                            DepartmentId = 2,
                            Email = "david.miller@example.com",
                            EmployeeName = "David Miller",
                            Phone = "5556667777"
                        },
                        new
                        {
                            EmployeeId = 8,
                            DepartmentId = 3,
                            Email = "jessica.taylor@example.com",
                            EmployeeName = "Jessica Taylor",
                            Phone = "6667778888"
                        },
                        new
                        {
                            EmployeeId = 9,
                            DepartmentId = 4,
                            Email = "james.anderson@example.com",
                            EmployeeName = "James Anderson",
                            Phone = "7778889999"
                        },
                        new
                        {
                            EmployeeId = 10,
                            DepartmentId = 5,
                            Email = "laura.martinez@example.com",
                            EmployeeName = "Laura Martinez",
                            Phone = "8889990000"
                        });
                });

            modelBuilder.Entity("Angular18Demo.API.Data.Employee", b =>
                {
                    b.HasOne("Angular18Demo.API.Data.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });
#pragma warning restore 612, 618
        }
    }
}
